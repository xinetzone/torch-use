{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# TVM"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from matplotlib import pyplot as plt\n",
    "import torch\n",
    "\n",
    "from mod import load_mod\n",
    "\n",
    "plt.ion()\n",
    "# 载入自定义模块\n",
    "load_mod()\n",
    "\n",
    "from xinet import CV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Files already downloaded and verified\n",
      "Files already downloaded and verified\n"
     ]
    }
   ],
   "source": [
    "import torch\n",
    "from torchvision.models import quantization as models\n",
    "from torch import nn\n",
    "\n",
    "def create_combined_model(model_fe):\n",
    "    # 步骤1：分离特征提取器\n",
    "    model_fe_features = nn.Sequential(\n",
    "        model_fe.quant,  # 量化 input\n",
    "        model_fe.conv1,\n",
    "        model_fe.bn1,\n",
    "        model_fe.relu,\n",
    "        model_fe.maxpool,\n",
    "        model_fe.layer1,\n",
    "        model_fe.layer2,\n",
    "        model_fe.layer3,\n",
    "        model_fe.layer4,\n",
    "        model_fe.avgpool,\n",
    "        model_fe.dequant,  # 反量化 output\n",
    "    )\n",
    "\n",
    "    # 步骤2：创建一个新的“头”\n",
    "    new_head = nn.Sequential(\n",
    "        nn.Dropout(p=0.5),\n",
    "        nn.Linear(num_ftrs, 10),\n",
    "    )\n",
    "\n",
    "    # 步骤3：合并，不要忘记量化 stubs\n",
    "    new_model = nn.Sequential(\n",
    "        model_fe_features,\n",
    "        nn.Flatten(1),\n",
    "        new_head,\n",
    "    )\n",
    "    return new_model\n",
    "\n",
    "batch_size = 128\n",
    "train_iter, test_iter = CV.load_data_cifar10(batch_size=batch_size)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import time\n",
    "import torch\n",
    "\n",
    "import sys\n",
    "TVM_HOME = '/media/pc/data/4tb/xinet/tvm'\n",
    "sys.path.extend([f'{TVM_HOME}/python', f'{TVM_HOME}/vta/python'])\n",
    "\n",
    "import tvm\n",
    "from tvm import relay\n",
    "\n",
    "\n",
    "def find_topk(array, k, axis=-1, largest=True, sorted=True):\n",
    "    if axis is None:\n",
    "        axis_size = array.size\n",
    "    else:\n",
    "        axis_size = array.shape[axis]\n",
    "    assert 1 <= k <= axis_size\n",
    "\n",
    "    array = np.asanyarray(array)\n",
    "    if largest:\n",
    "        index_array = np.argpartition(array, axis_size-k, axis=axis)\n",
    "        topk_indices = np.take(index_array, -np.arange(k)-1, axis=axis)\n",
    "    else:\n",
    "        index_array = np.argpartition(array, k-1, axis=axis)\n",
    "        topk_indices = np.take(index_array, np.arange(k), axis=axis)\n",
    "    topk_values = np.take_along_axis(array, topk_indices, axis=axis)\n",
    "    if sorted:\n",
    "        sorted_indices_in_topk = np.argsort(topk_values, axis=axis)\n",
    "        if largest:\n",
    "            sorted_indices_in_topk = np.flip(sorted_indices_in_topk, axis=axis)\n",
    "        sorted_topk_values = np.take_along_axis(\n",
    "            topk_values, sorted_indices_in_topk, axis=axis)\n",
    "        sorted_topk_indices = np.take_along_axis(\n",
    "            topk_indices, sorted_indices_in_topk, axis=axis)\n",
    "        return sorted_topk_values, sorted_topk_indices\n",
    "    return topk_values, topk_indices\n",
    "\n",
    "\n",
    "def calibrate_dataset(val_loader, calibration_samples, batch_size):\n",
    "    for i, (input, _) in enumerate(val_loader):\n",
    "        if i * batch_size >= calibration_samples:\n",
    "            break\n",
    "        yield {\"input\": input.numpy()}\n",
    "\n",
    "\n",
    "def quantize(mod, params, data_aware, val_loader, calibration_samples=500, batch_size=1):\n",
    "    if data_aware:\n",
    "        print(\"tvm calibration quantize begin---------------------------->>\")\n",
    "        with relay.quantize.qconfig(calibrate_mode=\"kl_divergence\", weight_scale=\"max\", skip_conv_layers=[0], skip_dense_layer=True):\n",
    "            mod = relay.quantize.quantize(\n",
    "                mod, params, dataset=calibrate_dataset(val_loader, calibration_samples, batch_size))\n",
    "            #print(mod)\n",
    "        print(\"tvm calibration quantize end---------------------------->>\")\n",
    "    else:\n",
    "        print(\"tvm global scale quantize begin---------------------------->>\")\n",
    "        with relay.quantize.qconfig(calibrate_mode=\"global_scale\", global_scale=8.0):\n",
    "            mod = relay.quantize.quantize(mod, params)\n",
    "        print(\"tvm global scale quantize end---------------------------->>\")\n",
    "    return mod\n",
    "\n",
    "\n",
    "def run_tvm_model(mod, params, target=\"llvm\"):\n",
    "    with tvm.transform.PassContext(opt_level=3):\n",
    "        lib = relay.build(mod, target=target, params=params)\n",
    "    runtime = tvm.contrib.graph_executor.GraphModule(\n",
    "        lib[\"default\"](tvm.device(target, 0)))\n",
    "    return runtime\n",
    "\n",
    "\n",
    "def tvm_model(model, batch_size):\n",
    "    input_shape = (batch_size, 3, 32, 32)\n",
    "    shape_list = [(\"input\", input_shape)]\n",
    "    input_data = torch.randn(input_shape)\n",
    "    scripted_model = torch.jit.trace(model, input_data).eval()\n",
    "    mod, params = relay.frontend.from_pytorch(scripted_model, shape_list)\n",
    "    return mod, params\n",
    "\n",
    "\n",
    "def tvm_test(model, val_loader,\n",
    "             batch_size, data_aware,\n",
    "             calibration_samples=500,\n",
    "             print_freq=100,\n",
    "             pre_quantization=False):\n",
    "    mod, params = tvm_model(model, batch_size)\n",
    "    if not pre_quantization:\n",
    "        mod = quantize(mod, params, data_aware, val_loader,\n",
    "                       calibration_samples=calibration_samples,\n",
    "                       batch_size=batch_size)\n",
    "    runtime = run_tvm_model(mod, params)\n",
    "    #print(runtime.benchmark(dev, number=1, repeat=100))\n",
    "\n",
    "    test_nums = len(val_loader)\n",
    "    top1_correct = 0\n",
    "    top5_correct = 0\n",
    "    print('llvm inference-------------->>')\n",
    "    for i, (input, label) in enumerate(val_loader, 1):\n",
    "        runtime.set_input('input', input)\n",
    "        runtime.run()\n",
    "        output = runtime.get_output(0).asnumpy()\n",
    "\n",
    "        # find topk index\n",
    "        _, preds = find_topk(output, 5)\n",
    "        print(preds, label)\n",
    "        if label.item() == preds[0][0]:\n",
    "            top1_correct += 1\n",
    "\n",
    "        if label.item() in preds[0]:\n",
    "            top5_correct += 1\n",
    "\n",
    "        if i % print_freq == 0:\n",
    "            print('Test: [{}/{}] \\t'\n",
    "                  'Acc@1 {:.4f} \\t'\n",
    "                  'Acc@5 {:.4f}'.format(\n",
    "                      i, test_nums, top1_correct / i, top5_correct / i))\n",
    "\n",
    "    top1 = top1_correct / test_nums\n",
    "    top5 = top5_correct / test_nums\n",
    "    print(' * Acc@1 {:.4f} Acc@5 {:.4f}'\n",
    "          .format(top1, top5))\n",
    "\n",
    "    time_start = time.time()\n",
    "    repeat = 100\n",
    "    for i, (input, label) in enumerate(val_loader, 1):\n",
    "        for r in range(repeat):\n",
    "            runtime.set_input('input', input)\n",
    "            runtime.run()\n",
    "            output = runtime.get_output(0).asnumpy()\n",
    "        time_end = time.time()\n",
    "        print(\"平均推理时间：\", (time_end - time_start)/repeat)\n",
    "        exit()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "Expected more than 1 value per channel when training, got input size torch.Size([1, 512, 1, 1])",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[1;32m/media/pc/data/4tb/xinet/web/quantization/docs/study/transfer-learning/tvm.ipynb Cell 5'\u001b[0m in \u001b[0;36m<cell line: 15>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/quantization/docs/study/transfer-learning/tvm.ipynb#ch0000004vscode-remote?line=10'>11</a>\u001b[0m \u001b[39mfor\u001b[39;00m param \u001b[39min\u001b[39;00m model_ft\u001b[39m.\u001b[39mparameters():\n\u001b[1;32m     <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/quantization/docs/study/transfer-learning/tvm.ipynb#ch0000004vscode-remote?line=11'>12</a>\u001b[0m   param\u001b[39m.\u001b[39mrequires_grad \u001b[39m=\u001b[39m \u001b[39mTrue\u001b[39;00m\n\u001b[0;32m---> <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/quantization/docs/study/transfer-learning/tvm.ipynb#ch0000004vscode-remote?line=14'>15</a>\u001b[0m tvm_test(model_ft, test_iter,\n\u001b[1;32m     <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/quantization/docs/study/transfer-learning/tvm.ipynb#ch0000004vscode-remote?line=15'>16</a>\u001b[0m          batch_size\u001b[39m=\u001b[39;49m\u001b[39m1\u001b[39;49m, data_aware\u001b[39m=\u001b[39;49m\u001b[39mTrue\u001b[39;49;00m,\n\u001b[1;32m     <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/quantization/docs/study/transfer-learning/tvm.ipynb#ch0000004vscode-remote?line=16'>17</a>\u001b[0m          calibration_samples\u001b[39m=\u001b[39;49m\u001b[39m500\u001b[39;49m,\n\u001b[1;32m     <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/quantization/docs/study/transfer-learning/tvm.ipynb#ch0000004vscode-remote?line=17'>18</a>\u001b[0m          print_freq\u001b[39m=\u001b[39;49m\u001b[39m100\u001b[39;49m,\n\u001b[1;32m     <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/quantization/docs/study/transfer-learning/tvm.ipynb#ch0000004vscode-remote?line=18'>19</a>\u001b[0m          pre_quantization\u001b[39m=\u001b[39;49m\u001b[39mFalse\u001b[39;49;00m)\n",
      "\u001b[1;32m/media/pc/data/4tb/xinet/web/quantization/docs/study/transfer-learning/tvm.ipynb Cell 4'\u001b[0m in \u001b[0;36mtvm_test\u001b[0;34m(model, val_loader, batch_size, data_aware, calibration_samples, print_freq, pre_quantization)\u001b[0m\n\u001b[1;32m     <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/quantization/docs/study/transfer-learning/tvm.ipynb#ch0000003vscode-remote?line=79'>80</a>\u001b[0m \u001b[39mdef\u001b[39;00m \u001b[39mtvm_test\u001b[39m(model, val_loader,\n\u001b[1;32m     <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/quantization/docs/study/transfer-learning/tvm.ipynb#ch0000003vscode-remote?line=80'>81</a>\u001b[0m              batch_size, data_aware,\n\u001b[1;32m     <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/quantization/docs/study/transfer-learning/tvm.ipynb#ch0000003vscode-remote?line=81'>82</a>\u001b[0m              calibration_samples\u001b[39m=\u001b[39m\u001b[39m500\u001b[39m,\n\u001b[1;32m     <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/quantization/docs/study/transfer-learning/tvm.ipynb#ch0000003vscode-remote?line=82'>83</a>\u001b[0m              print_freq\u001b[39m=\u001b[39m\u001b[39m100\u001b[39m,\n\u001b[1;32m     <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/quantization/docs/study/transfer-learning/tvm.ipynb#ch0000003vscode-remote?line=83'>84</a>\u001b[0m              pre_quantization\u001b[39m=\u001b[39m\u001b[39mFalse\u001b[39;00m):\n\u001b[0;32m---> <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/quantization/docs/study/transfer-learning/tvm.ipynb#ch0000003vscode-remote?line=84'>85</a>\u001b[0m     mod, params \u001b[39m=\u001b[39m tvm_model(model, batch_size)\n\u001b[1;32m     <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/quantization/docs/study/transfer-learning/tvm.ipynb#ch0000003vscode-remote?line=85'>86</a>\u001b[0m     \u001b[39mif\u001b[39;00m \u001b[39mnot\u001b[39;00m pre_quantization:\n\u001b[1;32m     <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/quantization/docs/study/transfer-learning/tvm.ipynb#ch0000003vscode-remote?line=86'>87</a>\u001b[0m         mod \u001b[39m=\u001b[39m quantize(mod, params, data_aware, val_loader,\n\u001b[1;32m     <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/quantization/docs/study/transfer-learning/tvm.ipynb#ch0000003vscode-remote?line=87'>88</a>\u001b[0m                        calibration_samples\u001b[39m=\u001b[39mcalibration_samples,\n\u001b[1;32m     <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/quantization/docs/study/transfer-learning/tvm.ipynb#ch0000003vscode-remote?line=88'>89</a>\u001b[0m                        batch_size\u001b[39m=\u001b[39mbatch_size)\n",
      "\u001b[1;32m/media/pc/data/4tb/xinet/web/quantization/docs/study/transfer-learning/tvm.ipynb Cell 4'\u001b[0m in \u001b[0;36mtvm_model\u001b[0;34m(model, batch_size)\u001b[0m\n\u001b[1;32m     <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/quantization/docs/study/transfer-learning/tvm.ipynb#ch0000003vscode-remote?line=72'>73</a>\u001b[0m shape_list \u001b[39m=\u001b[39m [(\u001b[39m\"\u001b[39m\u001b[39minput\u001b[39m\u001b[39m\"\u001b[39m, input_shape)]\n\u001b[1;32m     <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/quantization/docs/study/transfer-learning/tvm.ipynb#ch0000003vscode-remote?line=73'>74</a>\u001b[0m input_data \u001b[39m=\u001b[39m torch\u001b[39m.\u001b[39mrandn(input_shape)\n\u001b[0;32m---> <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/quantization/docs/study/transfer-learning/tvm.ipynb#ch0000003vscode-remote?line=74'>75</a>\u001b[0m scripted_model \u001b[39m=\u001b[39m torch\u001b[39m.\u001b[39;49mjit\u001b[39m.\u001b[39;49mtrace(model, input_data)\u001b[39m.\u001b[39meval()\n\u001b[1;32m     <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/quantization/docs/study/transfer-learning/tvm.ipynb#ch0000003vscode-remote?line=75'>76</a>\u001b[0m mod, params \u001b[39m=\u001b[39m relay\u001b[39m.\u001b[39mfrontend\u001b[39m.\u001b[39mfrom_pytorch(scripted_model, shape_list)\n\u001b[1;32m     <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/quantization/docs/study/transfer-learning/tvm.ipynb#ch0000003vscode-remote?line=76'>77</a>\u001b[0m \u001b[39mreturn\u001b[39;00m mod, params\n",
      "File \u001b[0;32m~/.local/lib/python3.8/site-packages/torch/jit/_trace.py:733\u001b[0m, in \u001b[0;36mtrace\u001b[0;34m(func, example_inputs, optimize, check_trace, check_inputs, check_tolerance, strict, _force_outplace, _module_class, _compilation_unit)\u001b[0m\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=729'>730</a>\u001b[0m     \u001b[39mreturn\u001b[39;00m func\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=731'>732</a>\u001b[0m \u001b[39mif\u001b[39;00m \u001b[39misinstance\u001b[39m(func, torch\u001b[39m.\u001b[39mnn\u001b[39m.\u001b[39mModule):\n\u001b[0;32m--> <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=732'>733</a>\u001b[0m     \u001b[39mreturn\u001b[39;00m trace_module(\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=733'>734</a>\u001b[0m         func,\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=734'>735</a>\u001b[0m         {\u001b[39m\"\u001b[39;49m\u001b[39mforward\u001b[39;49m\u001b[39m\"\u001b[39;49m: example_inputs},\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=735'>736</a>\u001b[0m         \u001b[39mNone\u001b[39;49;00m,\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=736'>737</a>\u001b[0m         check_trace,\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=737'>738</a>\u001b[0m         wrap_check_inputs(check_inputs),\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=738'>739</a>\u001b[0m         check_tolerance,\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=739'>740</a>\u001b[0m         strict,\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=740'>741</a>\u001b[0m         _force_outplace,\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=741'>742</a>\u001b[0m         _module_class,\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=742'>743</a>\u001b[0m     )\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=744'>745</a>\u001b[0m \u001b[39mif\u001b[39;00m (\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=745'>746</a>\u001b[0m     \u001b[39mhasattr\u001b[39m(func, \u001b[39m\"\u001b[39m\u001b[39m__self__\u001b[39m\u001b[39m\"\u001b[39m)\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=746'>747</a>\u001b[0m     \u001b[39mand\u001b[39;00m \u001b[39misinstance\u001b[39m(func\u001b[39m.\u001b[39m\u001b[39m__self__\u001b[39m, torch\u001b[39m.\u001b[39mnn\u001b[39m.\u001b[39mModule)\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=747'>748</a>\u001b[0m     \u001b[39mand\u001b[39;00m func\u001b[39m.\u001b[39m\u001b[39m__name__\u001b[39m \u001b[39m==\u001b[39m \u001b[39m\"\u001b[39m\u001b[39mforward\u001b[39m\u001b[39m\"\u001b[39m\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=748'>749</a>\u001b[0m ):\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=749'>750</a>\u001b[0m     \u001b[39mreturn\u001b[39;00m trace_module(\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=750'>751</a>\u001b[0m         func\u001b[39m.\u001b[39m\u001b[39m__self__\u001b[39m,\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=751'>752</a>\u001b[0m         {\u001b[39m\"\u001b[39m\u001b[39mforward\u001b[39m\u001b[39m\"\u001b[39m: example_inputs},\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=758'>759</a>\u001b[0m         _module_class,\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=759'>760</a>\u001b[0m     )\n",
      "File \u001b[0;32m~/.local/lib/python3.8/site-packages/torch/jit/_trace.py:934\u001b[0m, in \u001b[0;36mtrace_module\u001b[0;34m(mod, inputs, optimize, check_trace, check_inputs, check_tolerance, strict, _force_outplace, _module_class, _compilation_unit)\u001b[0m\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=931'>932</a>\u001b[0m func \u001b[39m=\u001b[39m mod \u001b[39mif\u001b[39;00m method_name \u001b[39m==\u001b[39m \u001b[39m\"\u001b[39m\u001b[39mforward\u001b[39m\u001b[39m\"\u001b[39m \u001b[39melse\u001b[39;00m \u001b[39mgetattr\u001b[39m(mod, method_name)\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=932'>933</a>\u001b[0m example_inputs \u001b[39m=\u001b[39m make_tuple(example_inputs)\n\u001b[0;32m--> <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=933'>934</a>\u001b[0m module\u001b[39m.\u001b[39;49m_c\u001b[39m.\u001b[39;49m_create_method_from_trace(\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=934'>935</a>\u001b[0m     method_name,\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=935'>936</a>\u001b[0m     func,\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=936'>937</a>\u001b[0m     example_inputs,\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=937'>938</a>\u001b[0m     var_lookup_fn,\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=938'>939</a>\u001b[0m     strict,\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=939'>940</a>\u001b[0m     _force_outplace,\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=940'>941</a>\u001b[0m )\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=941'>942</a>\u001b[0m check_trace_method \u001b[39m=\u001b[39m module\u001b[39m.\u001b[39m_c\u001b[39m.\u001b[39m_get_method(method_name)\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/jit/_trace.py?line=943'>944</a>\u001b[0m \u001b[39m# Check the trace against new traces created from user-specified inputs\u001b[39;00m\n",
      "File \u001b[0;32m~/.local/lib/python3.8/site-packages/torch/nn/modules/module.py:887\u001b[0m, in \u001b[0;36mModule._call_impl\u001b[0;34m(self, *input, **kwargs)\u001b[0m\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=883'>884</a>\u001b[0m     \u001b[39minput\u001b[39m \u001b[39m=\u001b[39m bw_hook\u001b[39m.\u001b[39msetup_input_hook(\u001b[39minput\u001b[39m)\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=885'>886</a>\u001b[0m \u001b[39mif\u001b[39;00m torch\u001b[39m.\u001b[39m_C\u001b[39m.\u001b[39m_get_tracing_state():\n\u001b[0;32m--> <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=886'>887</a>\u001b[0m     result \u001b[39m=\u001b[39m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_slow_forward(\u001b[39m*\u001b[39;49m\u001b[39minput\u001b[39;49m, \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mkwargs)\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=887'>888</a>\u001b[0m \u001b[39melse\u001b[39;00m:\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=888'>889</a>\u001b[0m     result \u001b[39m=\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mforward(\u001b[39m*\u001b[39m\u001b[39minput\u001b[39m, \u001b[39m*\u001b[39m\u001b[39m*\u001b[39mkwargs)\n",
      "File \u001b[0;32m~/.local/lib/python3.8/site-packages/torch/nn/modules/module.py:860\u001b[0m, in \u001b[0;36mModule._slow_forward\u001b[0;34m(self, *input, **kwargs)\u001b[0m\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=857'>858</a>\u001b[0m         recording_scopes \u001b[39m=\u001b[39m \u001b[39mFalse\u001b[39;00m\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=858'>859</a>\u001b[0m \u001b[39mtry\u001b[39;00m:\n\u001b[0;32m--> <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=859'>860</a>\u001b[0m     result \u001b[39m=\u001b[39m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mforward(\u001b[39m*\u001b[39;49m\u001b[39minput\u001b[39;49m, \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mkwargs)\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=860'>861</a>\u001b[0m \u001b[39mfinally\u001b[39;00m:\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=861'>862</a>\u001b[0m     \u001b[39mif\u001b[39;00m recording_scopes:\n",
      "File \u001b[0;32m~/.local/lib/python3.8/site-packages/torch/nn/modules/container.py:119\u001b[0m, in \u001b[0;36mSequential.forward\u001b[0;34m(self, input)\u001b[0m\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/container.py?line=116'>117</a>\u001b[0m \u001b[39mdef\u001b[39;00m \u001b[39mforward\u001b[39m(\u001b[39mself\u001b[39m, \u001b[39minput\u001b[39m):\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/container.py?line=117'>118</a>\u001b[0m     \u001b[39mfor\u001b[39;00m module \u001b[39min\u001b[39;00m \u001b[39mself\u001b[39m:\n\u001b[0;32m--> <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/container.py?line=118'>119</a>\u001b[0m         \u001b[39minput\u001b[39m \u001b[39m=\u001b[39m module(\u001b[39minput\u001b[39;49m)\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/container.py?line=119'>120</a>\u001b[0m     \u001b[39mreturn\u001b[39;00m \u001b[39minput\u001b[39m\n",
      "File \u001b[0;32m~/.local/lib/python3.8/site-packages/torch/nn/modules/module.py:887\u001b[0m, in \u001b[0;36mModule._call_impl\u001b[0;34m(self, *input, **kwargs)\u001b[0m\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=883'>884</a>\u001b[0m     \u001b[39minput\u001b[39m \u001b[39m=\u001b[39m bw_hook\u001b[39m.\u001b[39msetup_input_hook(\u001b[39minput\u001b[39m)\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=885'>886</a>\u001b[0m \u001b[39mif\u001b[39;00m torch\u001b[39m.\u001b[39m_C\u001b[39m.\u001b[39m_get_tracing_state():\n\u001b[0;32m--> <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=886'>887</a>\u001b[0m     result \u001b[39m=\u001b[39m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_slow_forward(\u001b[39m*\u001b[39;49m\u001b[39minput\u001b[39;49m, \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mkwargs)\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=887'>888</a>\u001b[0m \u001b[39melse\u001b[39;00m:\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=888'>889</a>\u001b[0m     result \u001b[39m=\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mforward(\u001b[39m*\u001b[39m\u001b[39minput\u001b[39m, \u001b[39m*\u001b[39m\u001b[39m*\u001b[39mkwargs)\n",
      "File \u001b[0;32m~/.local/lib/python3.8/site-packages/torch/nn/modules/module.py:860\u001b[0m, in \u001b[0;36mModule._slow_forward\u001b[0;34m(self, *input, **kwargs)\u001b[0m\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=857'>858</a>\u001b[0m         recording_scopes \u001b[39m=\u001b[39m \u001b[39mFalse\u001b[39;00m\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=858'>859</a>\u001b[0m \u001b[39mtry\u001b[39;00m:\n\u001b[0;32m--> <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=859'>860</a>\u001b[0m     result \u001b[39m=\u001b[39m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mforward(\u001b[39m*\u001b[39;49m\u001b[39minput\u001b[39;49m, \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mkwargs)\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=860'>861</a>\u001b[0m \u001b[39mfinally\u001b[39;00m:\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=861'>862</a>\u001b[0m     \u001b[39mif\u001b[39;00m recording_scopes:\n",
      "File \u001b[0;32m~/.local/lib/python3.8/site-packages/torch/nn/modules/container.py:119\u001b[0m, in \u001b[0;36mSequential.forward\u001b[0;34m(self, input)\u001b[0m\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/container.py?line=116'>117</a>\u001b[0m \u001b[39mdef\u001b[39;00m \u001b[39mforward\u001b[39m(\u001b[39mself\u001b[39m, \u001b[39minput\u001b[39m):\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/container.py?line=117'>118</a>\u001b[0m     \u001b[39mfor\u001b[39;00m module \u001b[39min\u001b[39;00m \u001b[39mself\u001b[39m:\n\u001b[0;32m--> <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/container.py?line=118'>119</a>\u001b[0m         \u001b[39minput\u001b[39m \u001b[39m=\u001b[39m module(\u001b[39minput\u001b[39;49m)\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/container.py?line=119'>120</a>\u001b[0m     \u001b[39mreturn\u001b[39;00m \u001b[39minput\u001b[39m\n",
      "File \u001b[0;32m~/.local/lib/python3.8/site-packages/torch/nn/modules/module.py:887\u001b[0m, in \u001b[0;36mModule._call_impl\u001b[0;34m(self, *input, **kwargs)\u001b[0m\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=883'>884</a>\u001b[0m     \u001b[39minput\u001b[39m \u001b[39m=\u001b[39m bw_hook\u001b[39m.\u001b[39msetup_input_hook(\u001b[39minput\u001b[39m)\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=885'>886</a>\u001b[0m \u001b[39mif\u001b[39;00m torch\u001b[39m.\u001b[39m_C\u001b[39m.\u001b[39m_get_tracing_state():\n\u001b[0;32m--> <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=886'>887</a>\u001b[0m     result \u001b[39m=\u001b[39m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_slow_forward(\u001b[39m*\u001b[39;49m\u001b[39minput\u001b[39;49m, \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mkwargs)\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=887'>888</a>\u001b[0m \u001b[39melse\u001b[39;00m:\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=888'>889</a>\u001b[0m     result \u001b[39m=\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mforward(\u001b[39m*\u001b[39m\u001b[39minput\u001b[39m, \u001b[39m*\u001b[39m\u001b[39m*\u001b[39mkwargs)\n",
      "File \u001b[0;32m~/.local/lib/python3.8/site-packages/torch/nn/modules/module.py:860\u001b[0m, in \u001b[0;36mModule._slow_forward\u001b[0;34m(self, *input, **kwargs)\u001b[0m\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=857'>858</a>\u001b[0m         recording_scopes \u001b[39m=\u001b[39m \u001b[39mFalse\u001b[39;00m\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=858'>859</a>\u001b[0m \u001b[39mtry\u001b[39;00m:\n\u001b[0;32m--> <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=859'>860</a>\u001b[0m     result \u001b[39m=\u001b[39m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mforward(\u001b[39m*\u001b[39;49m\u001b[39minput\u001b[39;49m, \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mkwargs)\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=860'>861</a>\u001b[0m \u001b[39mfinally\u001b[39;00m:\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=861'>862</a>\u001b[0m     \u001b[39mif\u001b[39;00m recording_scopes:\n",
      "File \u001b[0;32m~/.local/lib/python3.8/site-packages/torch/nn/modules/container.py:119\u001b[0m, in \u001b[0;36mSequential.forward\u001b[0;34m(self, input)\u001b[0m\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/container.py?line=116'>117</a>\u001b[0m \u001b[39mdef\u001b[39;00m \u001b[39mforward\u001b[39m(\u001b[39mself\u001b[39m, \u001b[39minput\u001b[39m):\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/container.py?line=117'>118</a>\u001b[0m     \u001b[39mfor\u001b[39;00m module \u001b[39min\u001b[39;00m \u001b[39mself\u001b[39m:\n\u001b[0;32m--> <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/container.py?line=118'>119</a>\u001b[0m         \u001b[39minput\u001b[39m \u001b[39m=\u001b[39m module(\u001b[39minput\u001b[39;49m)\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/container.py?line=119'>120</a>\u001b[0m     \u001b[39mreturn\u001b[39;00m \u001b[39minput\u001b[39m\n",
      "File \u001b[0;32m~/.local/lib/python3.8/site-packages/torch/nn/modules/module.py:887\u001b[0m, in \u001b[0;36mModule._call_impl\u001b[0;34m(self, *input, **kwargs)\u001b[0m\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=883'>884</a>\u001b[0m     \u001b[39minput\u001b[39m \u001b[39m=\u001b[39m bw_hook\u001b[39m.\u001b[39msetup_input_hook(\u001b[39minput\u001b[39m)\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=885'>886</a>\u001b[0m \u001b[39mif\u001b[39;00m torch\u001b[39m.\u001b[39m_C\u001b[39m.\u001b[39m_get_tracing_state():\n\u001b[0;32m--> <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=886'>887</a>\u001b[0m     result \u001b[39m=\u001b[39m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_slow_forward(\u001b[39m*\u001b[39;49m\u001b[39minput\u001b[39;49m, \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mkwargs)\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=887'>888</a>\u001b[0m \u001b[39melse\u001b[39;00m:\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=888'>889</a>\u001b[0m     result \u001b[39m=\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mforward(\u001b[39m*\u001b[39m\u001b[39minput\u001b[39m, \u001b[39m*\u001b[39m\u001b[39m*\u001b[39mkwargs)\n",
      "File \u001b[0;32m~/.local/lib/python3.8/site-packages/torch/nn/modules/module.py:860\u001b[0m, in \u001b[0;36mModule._slow_forward\u001b[0;34m(self, *input, **kwargs)\u001b[0m\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=857'>858</a>\u001b[0m         recording_scopes \u001b[39m=\u001b[39m \u001b[39mFalse\u001b[39;00m\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=858'>859</a>\u001b[0m \u001b[39mtry\u001b[39;00m:\n\u001b[0;32m--> <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=859'>860</a>\u001b[0m     result \u001b[39m=\u001b[39m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mforward(\u001b[39m*\u001b[39;49m\u001b[39minput\u001b[39;49m, \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mkwargs)\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=860'>861</a>\u001b[0m \u001b[39mfinally\u001b[39;00m:\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=861'>862</a>\u001b[0m     \u001b[39mif\u001b[39;00m recording_scopes:\n",
      "File \u001b[0;32m~/.local/lib/python3.8/site-packages/torchvision/models/quantization/resnet.py:32\u001b[0m, in \u001b[0;36mQuantizableBasicBlock.forward\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m     <a href='file:///home/pc/.local/lib/python3.8/site-packages/torchvision/models/quantization/resnet.py?line=28'>29</a>\u001b[0m identity \u001b[39m=\u001b[39m x\n\u001b[1;32m     <a href='file:///home/pc/.local/lib/python3.8/site-packages/torchvision/models/quantization/resnet.py?line=30'>31</a>\u001b[0m out \u001b[39m=\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mconv1(x)\n\u001b[0;32m---> <a href='file:///home/pc/.local/lib/python3.8/site-packages/torchvision/models/quantization/resnet.py?line=31'>32</a>\u001b[0m out \u001b[39m=\u001b[39m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mbn1(out)\n\u001b[1;32m     <a href='file:///home/pc/.local/lib/python3.8/site-packages/torchvision/models/quantization/resnet.py?line=32'>33</a>\u001b[0m out \u001b[39m=\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mrelu(out)\n\u001b[1;32m     <a href='file:///home/pc/.local/lib/python3.8/site-packages/torchvision/models/quantization/resnet.py?line=34'>35</a>\u001b[0m out \u001b[39m=\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mconv2(out)\n",
      "File \u001b[0;32m~/.local/lib/python3.8/site-packages/torch/nn/modules/module.py:887\u001b[0m, in \u001b[0;36mModule._call_impl\u001b[0;34m(self, *input, **kwargs)\u001b[0m\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=883'>884</a>\u001b[0m     \u001b[39minput\u001b[39m \u001b[39m=\u001b[39m bw_hook\u001b[39m.\u001b[39msetup_input_hook(\u001b[39minput\u001b[39m)\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=885'>886</a>\u001b[0m \u001b[39mif\u001b[39;00m torch\u001b[39m.\u001b[39m_C\u001b[39m.\u001b[39m_get_tracing_state():\n\u001b[0;32m--> <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=886'>887</a>\u001b[0m     result \u001b[39m=\u001b[39m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_slow_forward(\u001b[39m*\u001b[39;49m\u001b[39minput\u001b[39;49m, \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mkwargs)\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=887'>888</a>\u001b[0m \u001b[39melse\u001b[39;00m:\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=888'>889</a>\u001b[0m     result \u001b[39m=\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mforward(\u001b[39m*\u001b[39m\u001b[39minput\u001b[39m, \u001b[39m*\u001b[39m\u001b[39m*\u001b[39mkwargs)\n",
      "File \u001b[0;32m~/.local/lib/python3.8/site-packages/torch/nn/modules/module.py:860\u001b[0m, in \u001b[0;36mModule._slow_forward\u001b[0;34m(self, *input, **kwargs)\u001b[0m\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=857'>858</a>\u001b[0m         recording_scopes \u001b[39m=\u001b[39m \u001b[39mFalse\u001b[39;00m\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=858'>859</a>\u001b[0m \u001b[39mtry\u001b[39;00m:\n\u001b[0;32m--> <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=859'>860</a>\u001b[0m     result \u001b[39m=\u001b[39m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mforward(\u001b[39m*\u001b[39;49m\u001b[39minput\u001b[39;49m, \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mkwargs)\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=860'>861</a>\u001b[0m \u001b[39mfinally\u001b[39;00m:\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/module.py?line=861'>862</a>\u001b[0m     \u001b[39mif\u001b[39;00m recording_scopes:\n",
      "File \u001b[0;32m~/.local/lib/python3.8/site-packages/torch/nn/modules/batchnorm.py:135\u001b[0m, in \u001b[0;36m_BatchNorm.forward\u001b[0;34m(self, input)\u001b[0m\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/batchnorm.py?line=132'>133</a>\u001b[0m \u001b[39massert\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mrunning_mean \u001b[39mis\u001b[39;00m \u001b[39mNone\u001b[39;00m \u001b[39mor\u001b[39;00m \u001b[39misinstance\u001b[39m(\u001b[39mself\u001b[39m\u001b[39m.\u001b[39mrunning_mean, torch\u001b[39m.\u001b[39mTensor)\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/batchnorm.py?line=133'>134</a>\u001b[0m \u001b[39massert\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mrunning_var \u001b[39mis\u001b[39;00m \u001b[39mNone\u001b[39;00m \u001b[39mor\u001b[39;00m \u001b[39misinstance\u001b[39m(\u001b[39mself\u001b[39m\u001b[39m.\u001b[39mrunning_var, torch\u001b[39m.\u001b[39mTensor)\n\u001b[0;32m--> <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/batchnorm.py?line=134'>135</a>\u001b[0m \u001b[39mreturn\u001b[39;00m F\u001b[39m.\u001b[39;49mbatch_norm(\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/batchnorm.py?line=135'>136</a>\u001b[0m     \u001b[39minput\u001b[39;49m,\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/batchnorm.py?line=136'>137</a>\u001b[0m     \u001b[39m# If buffers are not to be tracked, ensure that they won't be updated\u001b[39;49;00m\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/batchnorm.py?line=137'>138</a>\u001b[0m     \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mrunning_mean \u001b[39mif\u001b[39;49;00m \u001b[39mnot\u001b[39;49;00m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mtraining \u001b[39mor\u001b[39;49;00m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mtrack_running_stats \u001b[39melse\u001b[39;49;00m \u001b[39mNone\u001b[39;49;00m,\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/batchnorm.py?line=138'>139</a>\u001b[0m     \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mrunning_var \u001b[39mif\u001b[39;49;00m \u001b[39mnot\u001b[39;49;00m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mtraining \u001b[39mor\u001b[39;49;00m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mtrack_running_stats \u001b[39melse\u001b[39;49;00m \u001b[39mNone\u001b[39;49;00m,\n\u001b[1;32m    <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/modules/batchnorm.py?line=139'>140</a>\u001b[0m     \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mweight, \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mbias, bn_training, exponential_average_factor, \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49meps)\n",
      "File \u001b[0;32m~/.local/lib/python3.8/site-packages/torch/nn/functional.py:2147\u001b[0m, in \u001b[0;36mbatch_norm\u001b[0;34m(input, running_mean, running_var, weight, bias, training, momentum, eps)\u001b[0m\n\u001b[1;32m   <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/functional.py?line=2133'>2134</a>\u001b[0m     \u001b[39mreturn\u001b[39;00m handle_torch_function(\n\u001b[1;32m   <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/functional.py?line=2134'>2135</a>\u001b[0m         batch_norm,\n\u001b[1;32m   <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/functional.py?line=2135'>2136</a>\u001b[0m         (\u001b[39minput\u001b[39m,),\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/functional.py?line=2143'>2144</a>\u001b[0m         eps\u001b[39m=\u001b[39meps,\n\u001b[1;32m   <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/functional.py?line=2144'>2145</a>\u001b[0m     )\n\u001b[1;32m   <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/functional.py?line=2145'>2146</a>\u001b[0m \u001b[39mif\u001b[39;00m training:\n\u001b[0;32m-> <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/functional.py?line=2146'>2147</a>\u001b[0m     _verify_batch_size(\u001b[39minput\u001b[39;49m\u001b[39m.\u001b[39;49msize())\n\u001b[1;32m   <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/functional.py?line=2148'>2149</a>\u001b[0m \u001b[39mreturn\u001b[39;00m torch\u001b[39m.\u001b[39mbatch_norm(\n\u001b[1;32m   <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/functional.py?line=2149'>2150</a>\u001b[0m     \u001b[39minput\u001b[39m, weight, bias, running_mean, running_var, training, momentum, eps, torch\u001b[39m.\u001b[39mbackends\u001b[39m.\u001b[39mcudnn\u001b[39m.\u001b[39menabled\n\u001b[1;32m   <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/functional.py?line=2150'>2151</a>\u001b[0m )\n",
      "File \u001b[0;32m~/.local/lib/python3.8/site-packages/torch/nn/functional.py:2114\u001b[0m, in \u001b[0;36m_verify_batch_size\u001b[0;34m(size)\u001b[0m\n\u001b[1;32m   <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/functional.py?line=2111'>2112</a>\u001b[0m     size_prods \u001b[39m*\u001b[39m\u001b[39m=\u001b[39m size[i \u001b[39m+\u001b[39m \u001b[39m2\u001b[39m]\n\u001b[1;32m   <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/functional.py?line=2112'>2113</a>\u001b[0m \u001b[39mif\u001b[39;00m size_prods \u001b[39m==\u001b[39m \u001b[39m1\u001b[39m:\n\u001b[0;32m-> <a href='file:///home/pc/.local/lib/python3.8/site-packages/torch/nn/functional.py?line=2113'>2114</a>\u001b[0m     \u001b[39mraise\u001b[39;00m \u001b[39mValueError\u001b[39;00m(\u001b[39m\"\u001b[39m\u001b[39mExpected more than 1 value per channel when training, got input size \u001b[39m\u001b[39m{}\u001b[39;00m\u001b[39m\"\u001b[39m\u001b[39m.\u001b[39mformat(size))\n",
      "\u001b[0;31mValueError\u001b[0m: Expected more than 1 value per channel when training, got input size torch.Size([1, 512, 1, 1])"
     ]
    }
   ],
   "source": [
    "# 注意 `quantize=False`\n",
    "model = models.resnet18(pretrained=True, progress=True, quantize=False)\n",
    "num_ftrs = model.fc.in_features\n",
    "\n",
    "# Step 1\n",
    "model.train()\n",
    "# model.fuse_model()\n",
    "# Step 2\n",
    "model_ft = create_combined_model(model)\n",
    "\n",
    "for param in model_ft.parameters():\n",
    "  param.requires_grad = True\n",
    "\n",
    "\n",
    "tvm_test(model_ft, test_iter,\n",
    "         batch_size=1, data_aware=True,\n",
    "         calibration_samples=500,\n",
    "         print_freq=100,\n",
    "         pre_quantization=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "interpreter": {
   "hash": "916dbcbb3f70747c44a77c7bcd40155683ae19c65e1c03b4aa3499c5328201f1"
  },
  "kernelspec": {
   "display_name": "Python 3.8.10 64-bit",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.10"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
